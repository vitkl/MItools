% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/benchmarkMotifs.R
\name{benchmarkMotifs}
\alias{benchmarkMotifs}
\alias{queryOCCByMCOL}
\alias{mBenchmarkMotifs}
\title{Benchmark linear motif instance found using QSLIMFinder (SLIMFinder)}
\usage{

  benchmarkMotifs(occurence_file = "../viral_project/SLIMFinder_Vidal/result/occurence.txt",
  main_file = "../viral_project/SLIMFinder_Vidal/result/main_result.txt",
  domain_res_file = "../viral_project/processed_data_files/what_we_find_VS_ELM_clust20171019.RData",
  motif_setup = "../viral_project/processed_data_files/QSLIMFinder_instances_h2v_Vidal_clust201710.RData",
  neg_set = c("random", "all_instances", "all_proteins")[1],
  domain_results_obj = "res_count", motif_input_obj = "forSLIMFinder_Ready",
  one_from_cloud = T, type = "QSLIMFinder",
  dbfile_main = "../viral_project/data_files/instances_all.gff",
  dburl_main = "http://elm.eu.org/instances.gff?q=None&taxon=Homo\%20sapiens&instance_logic=",
  dbfile_query = "../viral_project/data_files/instances_query.gff",
  dburl_query = "http://elm.eu.org/instances.gff?q=all&taxon=irus&instance_logic=",
  query_res_query_only = T, motif_types = c("DOC", "MOD", "LIG", "DEG",
  "CLV", "TRG"), all_res_excl_query = T, merge_motif_variants = F,
  seed = 21, N = 100, replace = T, within1sequence = T,
  query_predictor_col = "Sig", all_predictor_col = "Sig", normalise = T,
  minoverlap = 2, maxgap = 0, minoverlap_redundant = 5,
  merge_domain_data = T, merge_by_occurence_mcols = c("query",
  "interacts_with"), merge_by_domain_res_cols = c("IDs_interactor_viral",
  "IDs_interactor_human"), count_ranges_by = list(by = "IDs_domain_human",
  name = "motif_occ_per_domain", normalise_by = "domain_count", normalised_name
  = "normalised_motif_occ_per_domain"),
  filter_by_domain_data = "p.value < 0.05",
  select_predictor_per_range = min, ...)

queryOCCByMCOL(res, keytype = "IDs_domain_human", key = "IPR032440")

mBenchmarkMotifs(datasets = c("", "Vidal"), descriptions = c("", ""),
  dir = "./", neg_set = c("random", "all_instances", "all_proteins")[1],
  domain_res_file = "./processed_data_files/what_we_find_VS_ELM_clust20171019.RData",
  domain_results_obj = "res_count", motif_input_obj = "forSLIMFinder_Ready",
  one_from_cloud = T, type = "QSLIMFinder",
  dbfile_main = "./data_files/instances9606.gff",
  dburl_main = "http://elm.eu.org/instances.gff?q=None&taxon=Homo\%20sapiens&instance_logic=",
  dbfile_query = "./data_files/instances10239.gff",
  dburl_query = "http://elm.eu.org/instances.gff?q=all&taxon=irus&instance_logic=",
  query_res_query_only = T, motif_types = c("DOC", "MOD", "LIG", "DEG",
  "CLV", "TRG"), all_res_excl_query = T, seed = 21, N = 100,
  replace = T, within1sequence = T, query_predictor_col = "Sig",
  all_predictor_col = "Sig", normalise = T, minoverlap = 2, maxgap = 0,
  minoverlap_redundant = 5, merge_motif_variants = F,
  motif_setup_month = "201710", merge_domain_data = T,
  merge_by_occurence_mcols = c("query", "interacts_with"),
  merge_by_domain_res_cols = c("IDs_interactor_viral",
  "IDs_interactor_human"), count_ranges_by = list(by = "IDs_domain_human",
  name = "motif_occ_per_domain", normalise_by = "domain_count", normalised_name
  = "normalised_motif_occ_per_domain"),
  filter_by_domain_data = "p.value < 0.05",
  select_predictor_per_range = min)
}
\arguments{
\item{occurence_file}{a path to a tsv (txt) file containing QSLIMFinder (SLIMFinder) occurence output}

\item{main_file}{a path to a tsv (txt) file containing QSLIMFinder (SLIMFinder) main output}

\item{domain_results_obj}{character, name of the object containing domain enrichment results (class == XYZinteration_XZEmpiricalPval)}

\item{motif_input_obj}{character, name of the object of class InteractionSubsetFASTA_list containing: FASTA sequences for interacting proteins, molecular interaction data they correspond to. Each element of a list contains input for individual QSLIMFinder run.}

\item{all_res_excl_query}{all results in the output is all occurences excluding the query proteins. If FALSE, all results include occurences in all proteins.}

\item{merge_motif_variants}{If FALSE (default) merge motif occurences only if motifs are variants of the same motif (such as TRG_NLS).}

\item{query_predictor_col}{"Sig" or "p.value" or "domain_motif_pval"}

\item{all_predictor_col}{"Sig"}

\item{normalise}{logical, normalise predictor value, just in case predictor doesn't span the full range between 0 ... 1}

\item{minoverlap}{integer, passed to \code{\link[GenomicRanges]{findOverlaps}}}

\item{maxgap}{integer, passed to \code{\link[GenomicRanges]{findOverlaps}}}

\item{minoverlap_redundant}{for removing motif classes that match the same occurence}

\item{filter_by_domain_data}{criteria to filter domain data and restrict motif search datasets (for example, "p.value < 0.05" or "fdr_pval < 0.05 & domain_count_per_IDs_interactor_viral > 1")}

\item{select_predictor_per_range}{function (such as min) that select predictor value if multiple values (such as returned by multiple datasets or multiple domains integrated) describe the same range}

\item{...}{other arguments passed to passed to \code{\link[GenomicRanges]{findOverlaps}}}

\item{keytype}{character, name of the column that contains key identifiers}

\item{key}{character, identifiers for which to retrieve the result}

\item{datasets}{character vector, names of the datasets ("Vidal" in "./SLIMFinder_Vidal/result/occurence.txt" or "" in "./SLIMFinder/result/occurence.txt")}

\item{descriptions}{character vector, description of the datasets (title of the ROC plot)}

\item{dir}{character, base directory. For example, "./" in "./SLIMFinder_Vidal/result/occurence.txt"}

\item{domain_res}{RData containing objects generated by what_we_find_VS_ELM.Rmd script (specifically res_count object)}
}
\value{
GenomicRanges containing motifs for a given key
}
\description{
Benchmark linear motif instance found using QSLIMFinder (SLIMFinder)

Get motifs from the output of benchmarking linear motifs by id

Benchmark linear motif instance found using QSLIMFinder (SLIMFinder)
}
\seealso{
\code{\link{ELMdb2GRanges}}, \code{\link{findOverlapsBench}}
}
\author{
Vitalii Kleshchevnikov

Vitalii Kleshchevnikov

Vitalii Kleshchevnikov
}
