{
    "collab_server" : "",
    "contents" : "##' Download FASTA for a list of post-processed chain ID (e.g. PRO_0000261216)\n##' @name download_fasta_postproc\n##' @author Vitalii Kleshchevnikov\n##' @param uniprot_ac character vector containg post-processed chain ID\n##' @param file_name file name and directory to save the result (\"./dir/filename\")\n##' @return nothing\n##' @import Biostrings\n##' @importFrom GenomeInfoDb seqnames\n##' @importMethodsFrom rtracklayer import\n##' @export download_fasta_postproc\n##' @details function to download from Uniprot and write fasta sequence files (renaming the UniProt-given name of the sequence to proteinID-FeatureID: P04591-PRO_0000261216) given post-processed chain ID, such as PRO_0000261216. If the file already contains the sequences for given post-processed chain ID you get a message, if some sequences are missing all sequences will be reloaded.\n##' @seealso \\code{\\link{download_fasta}}\n##' @examples\n##' download_fasta_postproc(postproc_id = c(\"PRO_0000261216\"), file_name = \"my_post_processed_chain.fasta\")\ndownload_fasta_postproc = function(postproc_id, file_name){\n  if(if(file.exists(file_name)) mean(postproc_id %in% gsub(\"^[[:alnum:]]+-\",\"\",fasta.index(file_name)$desc)) == 1 else F){\n    message(\"all sequences for given post-processed chain ID are alredy downloaded\")\n  }\n  if(if(file.exists(file_name)) mean(postproc_id %in% gsub(\"^[[:alnum:]]+-\",\"\",fasta.index(file_name)$desc)) != 1 else T){\n    message(\"downloading fasta sequences for given post-processed chain IDs ...\")\n    postproc_fasta = AAStringSet()\n    for(feature in postproc_id){\n      # Read gff from UniProt\n      new_feature = import(paste0(\"http://www.uniprot.org/uniprot/?query=\",feature,\"&format=gff\"), format=\"gff\")\n      # subset features with ID\n      new_feature = new_feature[!is.na(new_feature$ID)]\n      # select the feature we have searched for\n      new_feature = new_feature[new_feature$ID == feature]\n      # read FASTA for the protein\n      protein = as.character(seqnames(new_feature))\n      proteinFASTA = readAAStringSet(paste0(\"http://www.uniprot.org/uniprot/\", protein,\".fasta\"))\n      # select the first and the only sequence in a set and subset it by feature range\n      postproc_fasta_new = AAStringSet(proteinFASTA[[1]][ranges(new_feature)])\n      names(postproc_fasta_new) = paste0(protein, \"-\", feature)\n      postproc_fasta = append(postproc_fasta, postproc_fasta_new)\n\n      if(which(postproc_id == feature) %in% seq(1,length(postproc_id),10)){\n        # write data at each 10th sequence in case R crashes\n        writeXStringSet(postproc_fasta, file = file_name, format=\"fasta\")\n        # limit the number of requests per second to 10\n        Sys.sleep(1)\n      }\n    }\n    # write final result\n    writeXStringSet(postproc_fasta, file = file_name, format=\"fasta\")\n  }\n}\n",
    "created" : 1499958413069.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "478156129",
    "id" : "3172A302",
    "lastKnownWriteTime" : 1499960691,
    "last_content_update" : 1499960691997,
    "path" : "~/Desktop/vitalii/viral_project/MItools/R/download_fasta_postproc.R",
    "project_path" : "R/download_fasta_postproc.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 8,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}