}
# record how many interactions per database
N_SPECIES_ID_interactome[indices] = N_interactions
}
## record if the database is not active
else {
NO_DATABASE[indices] = databases[indices]
}
}
N_interactions
N_interactions > 0
setwd("queryPSICQUIC")
document()
library(devtools)
library(roxygen2)
document()
setwd("..")
install("queryPSICQUIC")
library(queryPSICQUIC)
query_PSICQUIC(query = "id:P74565 AND detmethod:\"MI:0018\"",
format = "tab25",
database = "imex",
file = "P74565_2H_interactions.tsv")
query_PSICQUIC(query = "id:P74565 AND detmethod:\"MI:0018\"",
format = "tab25",
database = "imex",
file = "P74565_2H_interactions.tsv")
devtools::install_github("/vitkl/viral_project/tree/master/queryPSICQUIC")
??install_github
devtools::install_github(repo = "/vitkl/viral_project/", subdir = "queryPSICQUIC")
devtools::install_github(repo = "/vitkl/viral_project", subdir = "queryPSICQUIC")
devtools::install_github(repo = "vitkl", subdir = "viral_project/queryPSICQUIC")
devtools::install_github(repo = "vitkl/viral_project", subdir = "queryPSICQUIC")
library(PSICQUIC)
psicquic <- PSICQUIC()
providers <- providers(psicquic)
providers
query_PSICQUIC(query = "id:P74565 AND detmethod:\"MI:0018\"",
format = "tab25",
database = "mentha",
file = "P74565_2H_interactions.tsv")
query_PSICQUIC(query = "id:565",
format = "tab25",
database = "BioGrid",
file = "P74565_2H_interactions_BioGrid_tab25.tsv")
query_PSICQUIC(query = "id:1",
format = "tab25",
database = "BioGrid",
file = "1_interactions_BioGrid_tab25.tsv")
query_PSICQUIC(query = "id:156",
format = "tab25",
database = "BioGrid",
file = "1_interactions_BioGrid_tab25.tsv")
?fwrite
query_PSICQUIC(query = "id:156",
format = "tab25",
database = "BioGrid",
file = "156_interactions_BioGrid_tab25.tsv")
library(queryPSICQUIC)
searchpaths()
grep("queryPSICQUIC",searchpaths(), value = T)
list.dirs("grep("queryPSICQUIC",searchpaths(), value = T)")
list.dirs("grep("queryPSICQUIC",searchpaths(), value = T)")
grep("queryPSICQUIC",searchpaths(), value = T)
list.dirs("grep(queryPSICQUIC",searchpaths(), value = T))
list.dirs(grep(queryPSICQUIC",searchpaths(), value = T))
)
)
""
list.dirs(grep("queryPSICQUIC",searchpaths(), value = T))
list.files(grep("queryPSICQUIC",searchpaths(), value = T))
paste0(list.dirs(grep("queryPSICQUIC",searchpaths(), value = T)),"/data/")
paste0(grep("queryPSICQUIC",searchpaths(), value = T),"/data/")
dir.exists(paste0(grep("queryPSICQUIC",searchpaths(), value = T),"/data/"))
if(!dir.exists(paste0(grep("queryPSICQUIC",searchpaths(), value = T),"/data/"))) dir.create(paste0(grep("queryPSICQUIC",searchpaths(), value = T),"/data/"))
list.files(grep("queryPSICQUIC",searchpaths(), value = T))
list.dirs(grep("queryPSICQUIC",searchpaths(), value = T))
grep("queryPSICQUIC",searchpaths(), value = T)
paste0(pkg_dir,"/data/")
pkg_dir = paste0(grep("queryPSICQUIC",searchpaths(), value = T),,"/data/")
pkg_dir = paste0(grep("queryPSICQUIC",searchpaths(), value = T),"/data/")
Months(Sys.Date())
months(Sys.Date())
year(Sys.Date())
paste0(months(Sys.Date()), year(Sys.Date()))
paste0(pkg_dir, months(Sys.Date()), year(Sys.Date()))
readLines("ftp://ftp.ebi.ac.uk/pub/databases/intact/current")
list.files("ftp://ftp.ebi.ac.uk/pub/databases/intact/current")
readLines("ftp://ftp.ebi.ac.uk/pub/databases/intact/current/")
fread("ftp://ftp.ebi.ac.uk/pub/databases/intact/current/")
list.files("ftp://ftp.ebi.ac.uk/pub/databases/intact/current/")
fread("ftp://ftp.ebi.ac.uk/pub/databases/intact/current/")
file.info("ftp://ftp.ebi.ac.uk/pub/databases/intact/current/all.zip")
file.info("ftp://ftp.ebi.ac.uk/pub/databases/intact/current/")
file.info("ftp://ftp.ebi.ac.uk/pub/databases/intact/current")
fread("ftp://ftp.ebi.ac.uk/pub/databases/intact/current/")
GET("all.zip")
GET("ftp://ftp.ebi.ac.uk/pub/databases/intact/current/")
fread("ftp://ftp.ebi.ac.uk/pub/databases/intact/current/")
grep("all.zip",readLines("ftp://ftp.ebi.ac.uk/pub/databases/intact/current/"), value = T)
sub("^[[:alnum:][:punct:][:blank:]]{43}", "", grep("all.zip",readLines("ftp://ftp.ebi.ac.uk/pub/databases/intact/current/"), value = T))
sub("^[[:alnum:][:punct:][:blank:]]{3}", "", grep("all.zip",readLines("ftp://ftp.ebi.ac.uk/pub/databases/intact/current/"), value = T))
sub("^[[:alnum:][:punct:][:blank:]]{33}", "", grep("all.zip",readLines("ftp://ftp.ebi.ac.uk/pub/databases/intact/current/"), value = T))
fread("ftp://ftp.ebi.ac.uk/pub/databases/intact/current/")
fread("ftp://ftp.ebi.ac.uk/pub/databases/intact/current/")[,.(V6, V7, V8, V9)]
fread("ftp://ftp.ebi.ac.uk/pub/databases/intact/current/")[V9 == "all.zip",.(V6, V7, V8, V9)]
fread("ftp://ftp.ebi.ac.uk/pub/databases/intact/current/")[V9 == "all.zip",.(V6, V7, V8, V9)][,paste0(V6,V7)]
last_release = fread("ftp://ftp.ebi.ac.uk/pub/databases/intact/current/")[V9 == "all.zip",.(V6, V7, V8, V9)][,paste0(V6,V7)]
last_release
last_release = fread("ftp://ftp.ebi.ac.uk/pub/databases/intact/current/")[V9 == "all.zip",.(V6, V7, V8, V9)][,paste0(V6,V7, gsub(":","_", V8))]
last_release
last_release = fread("ftp://ftp.ebi.ac.uk/pub/databases/intact/current/")[V9 == "all.zip",.(V6, V7, V8, V9)][,paste0(V6,V7, "_", gsub(":","_", V8))]
last_release
last_release = fread("ftp://ftp.ebi.ac.uk/pub/databases/intact/current/")[V9 == "all.zip",.(V6, V7, V8, V9)][,paste0(V6,"_",V7, "_", gsub(":","_", V8))]
last_release
paste0(pkg_dir, year(Sys.Date()), last_release)
last_release = fread("ftp://ftp.ebi.ac.uk/pub/databases/intact/current/")[V9 == "all.zip",.(V6, V7, V8, V9)][,paste0(V6,V7, "_", gsub(":","_", V8))]
paste0(pkg_dir, year(Sys.Date()), last_release)
last_release = fread("ftp://ftp.ebi.ac.uk/pub/databases/intact/current/")[V9 == "all.zip",.(V6, V7, V8, V9)][,paste0(V6,V7, ".", gsub(":",".", V8))]
paste0(pkg_dir, year(Sys.Date()), last_release)
last_release = fread("ftp://ftp.ebi.ac.uk/pub/databases/intact/current/")[V9 == "all.zip",.(V6, V7, V8, V9)][,paste0(V6,V7, "_", gsub(":",".", V8))]
paste0(pkg_dir, year(Sys.Date()), last_release)
pkg_dir_last_release = paste0(pkg_dir, year(Sys.Date()), last_release)
pkg_dir_last_release
devtools::load_all()
download_PSICQUIC_Rlib
devtools::load_all()
download_PSICQUIC_Rlib(query = "id:P74565 AND detmethod:\"MI:0018\"",
format = "tab27",
database = "imex")
last_release = fread("ftp://ftp.ebi.ac.uk/pub/databases/intact/current/")[V9 == "all.zip",.(V6, V7, V8, V9)][,paste0(V6,V7, "_", gsub(":",".", V8))]
last_release
devtools::load_all()
download_PSICQUIC_Rlib(query = "id:P74565 AND detmethod:\"MI:0018\"",
format = "tab27",
database = "imex")
docu
library(devtools)
library(roxygen2)
document()
document()
5
download_PSICQUIC_Rlib(query = "id:P74565 AND detmethod:\"MI:0018\"",
format = "tab27",
database = "imex")
document()
devtools::load_all()
download_PSICQUIC_Rlib(query = "id:P74565 AND detmethod:\"MI:0018\"",
format = "tab27",
database = "imex")
document()
devtools::load_all()
queryPSICQUIC(query = "id:P74565 AND detmethod:\"MI:0018\"",
format = "tab27",
database = "imex",
file = filename)
document()
devtools::load_all()
download_PSICQUIC_Rlib(query = "id:P74565 AND detmethod:\"MI:0018\"",
format = "tab27",
database = "imex")
document()
devtools::load_all()
download_PSICQUIC_Rlib(query = "id:P74565 AND detmethod:\"MI:0018\"",
format = "tab27",
database = "imex")
download_PSICQUIC_Rlib(query = "id:P74565 AND detmethod:\"MI:0018\"",
format = "tab27",
database = "imex")
rm(list = ls())
document()
devtools::load_all()
download_PSICQUIC_Rlib(query = "id:P74565 AND detmethod:\"MI:0018\"",
format = "tab27",
database = "imex")
document()
devtools::load_all()
download_PSICQUIC_Rlib(query = "id:P74565 AND detmethod:\"MI:0018\"",
format = "tab27",
database = "imex")
document()
devtools::install("..")
devtools::install("../queryPSICQUIC")
library(queryPSICQUIC)
download_PSICQUIC_Rlib(query = "id:P74565 AND detmethod:\"MI:0018\"",
format = "tab27",
database = "imex")
queryPSICQUIC:::download_PSICQUIC_Rlib(query = "id:P74565 AND detmethod:\"MI:0018\"",
format = "tab27",
database = "imex")
document()
devtools::install("..")
devtools::install("../queryPSICQUIC")
library(PSICQUIC)
queryPSICQUIC:::download_PSICQUIC_Rlib(query = "id:P74565 AND detmethod:\"MI:0018\"",
format = "tab27",
database = "imex")
document()
devtools::install("../queryPSICQUIC")
library(PSICQUIC)
queryPSICQUIC:::download_PSICQUIC_Rlib(query = "id:P74565 AND detmethod:\"MI:0018\"",
format = "tab27",
database = "imex")
queryPSICQUIC:::download_PSICQUIC_Rlib(query = "id:P74565 AND detmethod:\"MI:0018\"",
format = "tab27",
database = "imex")
gsub(":",".", "/Library/Frameworks/R.framework/Versions/3.4/Resources/library/queryPSICQUIC/data/2017Jun7_10.03/query_id:P74565 AND detmethod:\"MI:0018\"tab27imex")
filename = "/Library/Frameworks/R.framework/Versions/3.4/Resources/library/queryPSICQUIC/data/2017Jun7_10.03/query_id:P74565 AND detmethod:\"MI:0018\"tab27imex"
filename = gsub(":",".", filename)
filename
filename = gsub("\"",".", filename)
filename = gsub(":",".", filename)
filename
filename = gsub(" ",".", filename)
filename
filename = "/Library/Frameworks/R.framework/Versions/3.4/Resources/library/queryPSICQUIC/data/2017Jun7_10.03/query_id:P74565 AND detmethod:\"MI:0018\"tab27imex.tsv"
filename = gsub(":",".", filename)
filename = gsub("\"",".", filename)
filename = gsub(" ",".", filename)
if(file.exists(filename)){
message("found local copy of the data from the latest release ... reading into R")
}
filename
?download_PSICQUIC_Rlib
document()
library(devtools)
library(roxygen2)
document()
devtools::install("..")
devtools::install("../queryPSICQUIC")
library(queryPSICQUIC)
queryPSICQUIC:::download_PSICQUIC_Rlib(query = "id:P74565 AND detmethod:\"MI:0018\"",
format = "tab27",
database = "imex")
document()
devtools::install("../queryPSICQUIC")
document()
devtools::install("../queryPSICQUIC")
taxid = "9606"
paste0("taxidA:",taxid," AND ", "taxidB:",taxid)
document()
devtools::install("../queryPSICQUIC")
queryPSICQUICrlib(query = paste0("taxidA:",taxid," AND ", "taxidB:",taxid),
format = "tab25",
database = database)
queryPSICQUIC:::queryPSICQUICrlib(query = paste0("taxidA:",taxid," AND ", "taxidB:",taxid),
format = "tab25",
database = database)
database = "imex"
queryPSICQUIC:::queryPSICQUICrlib(query = paste0("taxidA:",taxid," AND ", "taxidB:",taxid),
format = "tab25",
database = database)
document()
devtools::install("../queryPSICQUIC")
queryPSICQUIC:::queryPSICQUICrlib(query = paste0("taxidA:",taxid," AND ", "taxidB:",taxid),
format = "tab25",
database = database)
queryPSICQUIC:::queryPSICQUICrlib(query = paste0("taxidA:",taxid," AND ", "taxidB:",taxid),
format = "tab25",
database = database)
library(devtools)
library(roxygen2)
document()
devtools::install("../queryPSICQUIC")
devtools::install("../MItoolkit")
library(devtools)
library(roxygen2)
document()
devtools::install("../MItoolkit")
taxid = "9606"
n_inter = 200
degree = NULL
database = "imex"
seed = 1
protein_only = TRUE
full_interactome = queryPSICQUICrlib(query = paste0("taxidA:",taxid," AND ", "taxidB:",taxid),
format = "tab25",
database = database)
library(devtools)
library(roxygen2)
document()
install("../MItools")
library(MItools)
uninstall("MItools")
uninstall("MItoolkit")
uninstall()
install("../MItools")
library(MItools)
?randomInteractome
document()
install("../MItools")
library(MItools)
taxid = "9606"
n_inter = 200
degree = NULL
database = "imex"
seed = 1
protein_only = TRUE
full_interactome = queryPSICQUICrlib(query = paste0("taxidA:",taxid," AND ", "taxidB:",taxid),
format = "tab25",
database = database)
full_interactome = MItools:::queryPSICQUICrlib(query = paste0("taxidA:",taxid," AND ", "taxidB:",taxid),
format = "tab25",
database = database)
document()
install("../MItools")
full_interactome = MItools:::queryPSICQUICrlib(query = paste0("taxidA:",taxid," AND ", "taxidB:",taxid),
format = "tab25",
database = database)
full_interactome = queryPSICQUIC:::queryPSICQUICrlib(query = paste0("taxidA:",taxid," AND ", "taxidB:",taxid),
format = "tab25",
database = database)
document()
install("../MItools")
knitr::opts_chunk$set(echo = TRUE)
if(!file.exists("./data/viral_interactions.txt")){
queryPSICQUIC(query = "species:10239",
format = "tab25",
database = "imex",
file = "./data_files/viral_interactions.txt")
}
library(MItools)
if(!file.exists("./data/viral_interactions.txt")){
queryPSICQUIC(query = "species:10239",
format = "tab25",
database = "imex",
file = "./data_files/viral_interactions.txt")
}
if(!file.exists("./data/viral_interactions.txt")){
queryPSICQUIC(query = "species:10239",
format = "tab25",
database = "imex",
file = "./data_files/viral_interactions.txt")
}
if(!file.exists("./data/viral_interactions.txt")){
queryPSICQUIC(query = "species:10239",
format = "tab25",
database = "imex",
file = "./data/viral_interactions.txt")
}
all_viral_interaction = fread("./data/viral_interactions.txt", stringsAsFactors = F)
# clean the data in the table to make it more useble
all_viral_interaction = cleanMITAB(all_viral_interaction)
# filter only human-viral interactions
all_viral_interaction = all_viral_interaction[Taxid_interactor_A == "9606" | Taxid_interactor_B == "9606",]
all_viral_interaction = unique(all_viral_interaction)
# download full human interactome
full =
?fullInteractome
full = fullInteractome(taxid = "9606", database = "imex", format = "tab25", clean = TRUE, protein_only = TRUE, directory = "./data/")
full_degree = edgelist2degree(full)
full_degree
?edgelist2degree
viral_proteins = unique(c(all_viral_interaction[Taxid_interactor_A != "9606", IDs_interactor_A], all_viral_interaction[Taxid_interactor_B != "9606", IDs_interactor_B]))
viral_degree = edgelist2degree(all_viral_interaction)[ID %in% viral_proteins,]
viral_degree
viral_proteins
human_viral_proteins = unique(c(all_viral_interaction[Taxid_interactor_A == "9606", IDs_interactor_A], all_viral_interaction[Taxid_interactor_B == "9606", IDs_interactor_B]))
viral_human_degree_dist = edgelist2degreeFreq(all_viral_interaction, prots = human_viral_proteins)
viral_degree_dist = edgelist2degreeFreq(all_viral_interaction, prots = viral_proteins)
full_degree = edgelist2degree(full)
# identify viral proteins
viral_proteins = unique(c(all_viral_interaction[Taxid_interactor_A != "9606", IDs_interactor_A], all_viral_interaction[Taxid_interactor_B != "9606", IDs_interactor_B]))
# calculate viral degree distribution
viral_degree_dist = edgelist2degreeFreq(all_viral_interaction, prots = viral_proteins)
# identify viral-interacting human proteins
human_viral_proteins = unique(c(all_viral_interaction[Taxid_interactor_A == "9606", IDs_interactor_A], all_viral_interaction[Taxid_interactor_B == "9606", IDs_interactor_B]))
# calculate viral-interacting human protein degree distribution
viral_human_degree_dist = edgelist2degreeFreq(all_viral_interaction, prots = human_viral_proteins)
viral_human_degree_dist
viral_degree_dist
plot(viral_degree_dist$N, viral_degree_dist$degree_freq)
plot(viral_degree_dist$N, viral_degree_dist$degree_freq, log = "xy")
plot(viral_degree_dist$N, viral_degree_dist$degree_freq, log = "xy", ylab = "degree frequency, log-scale", xlab = "degree, log-scale")
plot(viral_degree_dist$N, viral_degree_dist$degree_freq, log = "xy", ylab = "degree frequency, log-scale", xlab = "degree, log-scale", las=1)
plot(viral_human_degree_dist$N, viral_human_degree_dist$degree_freq, log = "xy", ylab = "degree frequency, log-scale", xlab = "degree, log-scale", las=1)
plot(viral_human_degree_dist$N, viral_human_degree_dist$degree_freq, log = "xy", ylab = "degree frequency, log-scale", xlab = "degree, log-scale", las=1)
plot(viral_degree_dist$N, viral_degree_dist$degree_freq, log = "xy", ylab = "degree frequency, log-scale", xlab = "degree, log-scale", las=1)
full_degree_dist = edgelist2degreeFreq(full)
full_degree_dist
plot(full_degree_dist$N, full_degree_dist$degree_freq,
log = "xy",
ylab = "degree frequency, log-scale",
xlab = "degree, log-scale",
las=1)
plot(viral_degree_dist$N, viral_degree_dist$degree_freq,
log = "xy", xlim = c(1, 1000)
ylab = "degree frequency, log-scale",
plot(viral_degree_dist$N, viral_degree_dist$degree_freq,
log = "xy", xlim = c(1, 1000),
ylab = "degree frequency, log-scale",
xlab = "degree, log-scale",
las=1)
plot(viral_human_degree_dist$N, viral_human_degree_dist$degree_freq,
log = "xy", xlim = c(1, 1000),
ylab = "degree frequency, log-scale",
xlab = "degree, log-scale",
las=1)
plot(full_degree_dist$N, full_degree_dist$degree_freq,
log = "xy", xlim = c(1, 1000),
ylab = "degree frequency, log-scale",
xlab = "degree, log-scale",
las=1)
plot(viral_human_degree_dist$N, viral_human_degree_dist$degree_freq,
log = "xy", xlim = c(1, 1000),
main = "degree distribution of viral-interacting human proteins (human-human interactions)",
ylab = "degree frequency, log-scale",
xlab = "degree, log-scale",
las=1)
viral_human_human_degree_dist = edgelist2degreeFreq(full, prots = human_viral_proteins)
plot(viral_human_human_degree_dist$N, viral_human_degree_dist$degree_freq,
log = "xy", xlim = c(1, 1000),
main = "degree distribution of viral-interacting human proteins (human-human interactions)",
ylab = "degree frequency, log-scale",
xlab = "degree, log-scale",
las=1)
plot(viral_human_human_degree_dist$N, viral_human_human_degree_dist$degree_freq,
log = "xy", xlim = c(1, 1000),
main = "degree distribution of viral-interacting human proteins (human-human interactions)",
ylab = "degree frequency, log-scale",
xlab = "degree, log-scale",
las=1)
plot(full_degree_dist$N, full_degree_dist$degree_freq,
log = "xy", xlim = c(1, 1000),
main = "degree distribution in human interactome",
ylab = "degree frequency, log-scale",
xlab = "degree, log-scale",
las=1)
plot(viral_human_human_degree_dist$N, viral_human_human_degree_dist$degree_freq,
log = "xy", xlim = c(1, 1000),
main = "degree distribution of viral-interacting human proteins (human-human interactions)",
ylab = "degree frequency, log-scale",
xlab = "degree, log-scale",
las=1)
plot(viral_human_human_degree_dist$N, viral_human_human_degree_dist$degree_freq,
log = "xy", xlim = c(1, 1000),
main = "degree distribution of viral-interacting human proteins \n (human-human interactions)",
ylab = "degree frequency, log-scale",
xlab = "degree, log-scale",
las=1)
plot(viral_human_human_degree_dist$N, viral_human_human_degree_dist$degree_freq,
log = "xy", xlim = c(1, 1000),
main = "degree distribution of viral-interacting human proteins \n - human-human interactions -",
ylab = "degree frequency, log-scale",
xlab = "degree, log-scale",
las=1)
plot(viral_human_degree_dist$N, viral_human_degree_dist$degree_freq,
log = "xy", xlim = c(1, 1000),
main = "degree distribution of viral-interacting human proteins \n - human-viral interactions -",
ylab = "degree frequency, log-scale",
xlab = "degree, log-scale",
las=1)
plot(full_degree_dist$N, full_degree_dist$degree_freq,
log = "xy", xlim = c(1, 1000),
main = "degree distribution in human interactome \n - human-human interactions -",
ylab = "degree frequency, log-scale",
xlab = "degree, log-scale",
las=1)
plot(full_degree_dist$N, full_degree_dist$degree_freq,
log = "xy", xlim = c(1, 1000), ylim = c(5e-05, 1),
main = "degree distribution in human interactome \n - human-human interactions -",
ylab = "degree frequency, log-scale",
xlab = "degree, log-scale",
las=1)
plot(full_degree_dist$N, full_degree_dist$degree_freq,
log = "xy", xlim = c(1, 1000), ylim = c(5e-05, 0.7),
main = "degree distribution in human interactome \n - human-human interactions -",
ylab = "degree frequency, log-scale",
xlab = "degree, log-scale",
las=1)
par(2,2)
full_degree = edgelist2degree(full)
full_degree = edgelist2degree(full)
full_degree_dist = edgelist2degreeFreq(full)
full_degree_dist = edgelist2degreeFreq(full)
plot(full_degree_dist$N, full_degree_dist$degree_freq,
log = "xy", xlim = c(1, 1000), ylim = c(5e-05, 1),
main = "degree distribution in human interactome \n - human-human interactions -",
ylab = "degree frequency, log-scale",
xlab = "degree, log-scale",
las=1)
plot(full_degree_dist$N, full_degree_dist$degree_freq,
log = "xy", xlim = c(1, 1000), ylim = c(5e-05, 1),
main = "degree distribution in human interactome \n - human-human interactions -",
ylab = "degree frequency, log-scale",
xlab = "degree, log-scale",
las=1)
viral_proteins = unique(c(all_viral_interaction[Taxid_interactor_A != "9606", IDs_interactor_A], all_viral_interaction[Taxid_interactor_B != "9606", IDs_interactor_B]))
viral_degree_dist = edgelist2degreeFreq(all_viral_interaction, prots = viral_proteins)
viral_degree_dist = edgelist2degreeFreq(all_viral_interaction, prots = viral_proteins)
plot(viral_degree_dist$N, viral_degree_dist$degree_freq,
log = "xy", xlim = c(1, 1000), ylim = c(5e-05, 1),
main = "degree distribution of viral proteins",
ylab = "degree frequency, log-scale",
xlab = "degree, log-scale",
las=1)
human_viral_proteins = unique(c(all_viral_interaction[Taxid_interactor_A == "9606", IDs_interactor_A], all_viral_interaction[Taxid_interactor_B == "9606", IDs_interactor_B]))
viral_human_degree_dist = edgelist2degreeFreq(all_viral_interaction, prots = human_viral_proteins)
plot(viral_human_degree_dist$N, viral_human_degree_dist$degree_freq,
log = "xy", xlim = c(1, 1000), ylim = c(5e-05, 1),
main = "degree distribution of viral-interacting human proteins \n - human-viral interactions -",
ylab = "degree frequency, log-scale",
xlab = "degree, log-scale",
las=1)
viral_human_human_degree_dist = edgelist2degreeFreq(full, prots = human_viral_proteins)
plot(viral_human_human_degree_dist$N, viral_human_human_degree_dist$degree_freq,
log = "xy", xlim = c(1, 1000), ylim = c(5e-05, 1),
main = "degree distribution of viral-interacting human proteins \n - human-human interactions -",
ylab = "degree frequency, log-scale",
xlab = "degree, log-scale",
las=1)
?par
