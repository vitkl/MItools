library(roxygen2)
document()
setwd("..")
install("queryPSICQUIC")
library(queryPSICQUIC)
?query_PSICQUIC
query_PSICQUIC(query = "id:P74565 AND detmethod:\"MI:0018\"",
format = "tab25",
database = "imex",
file = "P74565_2H_interactions.tsv")
setwd("queryPSICQUIC")
document()
document()
document()
document()
##' @importClassesFrom PSICQUIC
document()
document()
document()
document()
document()
document()
setwd("..")
install("queryPSICQUIC")
setwd("queryPSICQUIC")
document()
setwd("..")
install("queryPSICQUIC")
query_PSICQUIC(query = "id:P74565 AND detmethod:\"MI:0018\"",
format = "tab25",
database = "imex",
file = "P74565_2H_interactions.tsv")
query_PSICQUIC(query = "id:P74565 AND detmethod:\"MI:0018\"",
format = "tab25",
database = "imex",
file = "P74565_2H_interactions.tsv")\
library(queryPSICQUIC)
query_PSICQUIC(query = "id:P74565 AND detmethod:\"MI:0018\"",
format = "tab25",
database = "imex",
file = "P74565_2H_interactions.tsv")
query_PSICQUIC(query = "id:P74565",
format = "tab25",
database = "imex",
file = "P74565_2H_interactions.tsv")
library(PSICQUIC)
psicquic <- PSICQUIC()
providers <- providers(psicquic)
providers
query = "id:P74565"
format = "tab25"
database = "imex"
file = "P74565_2H_interactions.tsv"
if(database == "imex"){
## Choose IMEx databases
databases <- c("IntAct", "MINT", "bhf-ucl", "MPIDB", "MatrixDB",
"HPIDb","I2D-IMEx","InnateDB-IMEx", "MolCon", "UniProt", "MBInfo")
}
if(database != "imex"){
databases = database
}
query = gsub("\"","%22", query)
SPECIES_ID_interactome = data.table()
N_SPECIES_ID_interactome = character(length = length(databases))
NO_DATABASE = character(length = length(databases))
for(indices in 1:length(databases)) {
if(databases[indices] %in% providers) {
## Query for the number of interactions
PSICQUIC_query1 = paste0(query, "?format=count")
N_interactions <- unlist(rawQuery(psicquic, databases[indices], PSICQUIC_query1))
## if there are any interactions - Query for the interactions by 2500 at a time
if(N_interactions > 0){
N_start = 1
N_nrows = 2500
for(n_starts in seq(from = N_start, to = N_interactions, by = N_nrows)){
PSICQUIC_query2 = paste0(query, "?format=",format,"&firstResult=", n_starts,
"&maxResults=", N_nrows)
SPECIES_ID_interactome_d <- as.data.table(rawQuery(psicquic, databases[indices], PSICQUIC_query2))
SPECIES_ID_interactome <- rbind(SPECIES_ID_interactome, SPECIES_ID_interactome_d)
}
}
# record how many interactions per database
N_SPECIES_ID_interactome[indices] = N_interactions
}
## record if the database is not active
else {
NO_DATABASE[indices] = databases[indices]
}
}
library(data.table)
SPECIES_ID_interactome = data.table()
SPECIES_ID_interactome = data.table()
N_SPECIES_ID_interactome = character(length = length(databases))
NO_DATABASE = character(length = length(databases))
for(indices in 1:length(databases)) {
if(databases[indices] %in% providers) {
## Query for the number of interactions
PSICQUIC_query1 = paste0(query, "?format=count")
N_interactions <- unlist(rawQuery(psicquic, databases[indices], PSICQUIC_query1))
## if there are any interactions - Query for the interactions by 2500 at a time
if(N_interactions > 0){
N_start = 1
N_nrows = 2500
for(n_starts in seq(from = N_start, to = N_interactions, by = N_nrows)){
PSICQUIC_query2 = paste0(query, "?format=",format,"&firstResult=", n_starts,
"&maxResults=", N_nrows)
SPECIES_ID_interactome_d <- as.data.table(rawQuery(psicquic, databases[indices], PSICQUIC_query2))
SPECIES_ID_interactome <- rbind(SPECIES_ID_interactome, SPECIES_ID_interactome_d)
}
}
# record how many interactions per database
N_SPECIES_ID_interactome[indices] = N_interactions
}
## record if the database is not active
else {
NO_DATABASE[indices] = databases[indices]
}
}
database = "MatrixDB"
SPECIES_ID_interactome = data.table()
N_SPECIES_ID_interactome = character(length = length(databases))
NO_DATABASE = character(length = length(databases))
for(indices in 1:length(databases)) {
if(databases[indices] %in% providers) {
## Query for the number of interactions
PSICQUIC_query1 = paste0(query, "?format=count")
N_interactions <- unlist(rawQuery(psicquic, databases[indices], PSICQUIC_query1))
## if there are any interactions - Query for the interactions by 2500 at a time
if(N_interactions > 0){
N_start = 1
N_nrows = 2500
for(n_starts in seq(from = N_start, to = N_interactions, by = N_nrows)){
PSICQUIC_query2 = paste0(query, "?format=",format,"&firstResult=", n_starts,
"&maxResults=", N_nrows)
SPECIES_ID_interactome_d <- as.data.table(rawQuery(psicquic, databases[indices], PSICQUIC_query2))
SPECIES_ID_interactome <- rbind(SPECIES_ID_interactome, SPECIES_ID_interactome_d)
}
}
# record how many interactions per database
N_SPECIES_ID_interactome[indices] = N_interactions
}
## record if the database is not active
else {
NO_DATABASE[indices] = databases[indices]
}
}
N_interactions
SPECIES_ID_interactome_d
SPECIES_ID_interactome = data.table()
N_SPECIES_ID_interactome = character(length = length(databases))
NO_DATABASE = character(length = length(databases))
for(indices in 1:length(databases)) {
if(databases[indices] %in% providers) {
## Query for the number of interactions
PSICQUIC_query1 = paste0(query, "?format=count")
N_interactions <- unlist(rawQuery(psicquic, databases[indices], PSICQUIC_query1))
## if there are any interactions - Query for the interactions by 2500 at a time
if(N_interactions > 0){
N_start = 1
N_nrows = 2500
for(n_starts in seq(from = N_start, to = N_interactions, by = N_nrows)){
PSICQUIC_query2 = paste0(query, "?format=",format,"&firstResult=", n_starts,
"&maxResults=", N_nrows)
SPECIES_ID_interactome_d <- as.data.table(rawQuery(psicquic, databases[indices], PSICQUIC_query2))
SPECIES_ID_interactome <- rbind(SPECIES_ID_interactome, SPECIES_ID_interactome_d)
}
}
# record how many interactions per database
N_SPECIES_ID_interactome[indices] = N_interactions
}
## record if the database is not active
else {
NO_DATABASE[indices] = databases[indices]
}
}
SPECIES_ID_interactome_d
if(database != "imex"){
databases = database
}
query = gsub("\"","%22", query)
SPECIES_ID_interactome = data.table()
N_SPECIES_ID_interactome = character(length = length(databases))
NO_DATABASE = character(length = length(databases))
for(indices in 1:length(databases)) {
if(databases[indices] %in% providers) {
## Query for the number of interactions
PSICQUIC_query1 = paste0(query, "?format=count")
N_interactions <- unlist(rawQuery(psicquic, databases[indices], PSICQUIC_query1))
## if there are any interactions - Query for the interactions by 2500 at a time
if(N_interactions > 0){
N_start = 1
N_nrows = 2500
for(n_starts in seq(from = N_start, to = N_interactions, by = N_nrows)){
PSICQUIC_query2 = paste0(query, "?format=",format,"&firstResult=", n_starts,
"&maxResults=", N_nrows)
SPECIES_ID_interactome_d <- as.data.table(rawQuery(psicquic, databases[indices], PSICQUIC_query2))
SPECIES_ID_interactome <- rbind(SPECIES_ID_interactome, SPECIES_ID_interactome_d)
}
}
# record how many interactions per database
N_SPECIES_ID_interactome[indices] = N_interactions
}
## record if the database is not active
else {
NO_DATABASE[indices] = databases[indices]
}
}
N_interactions
N_interactions > 0
setwd("queryPSICQUIC")
document()
library(devtools)
library(roxygen2)
document()
setwd("..")
install("queryPSICQUIC")
library(queryPSICQUIC)
query_PSICQUIC(query = "id:P74565 AND detmethod:\"MI:0018\"",
format = "tab25",
database = "imex",
file = "P74565_2H_interactions.tsv")
query_PSICQUIC(query = "id:P74565 AND detmethod:\"MI:0018\"",
format = "tab25",
database = "imex",
file = "P74565_2H_interactions.tsv")
devtools::install_github("/vitkl/viral_project/tree/master/queryPSICQUIC")
??install_github
devtools::install_github(repo = "/vitkl/viral_project/", subdir = "queryPSICQUIC")
devtools::install_github(repo = "/vitkl/viral_project", subdir = "queryPSICQUIC")
devtools::install_github(repo = "vitkl", subdir = "viral_project/queryPSICQUIC")
devtools::install_github(repo = "vitkl/viral_project", subdir = "queryPSICQUIC")
library(PSICQUIC)
psicquic <- PSICQUIC()
providers <- providers(psicquic)
providers
query_PSICQUIC(query = "id:P74565 AND detmethod:\"MI:0018\"",
format = "tab25",
database = "mentha",
file = "P74565_2H_interactions.tsv")
query_PSICQUIC(query = "id:565",
format = "tab25",
database = "BioGrid",
file = "P74565_2H_interactions_BioGrid_tab25.tsv")
query_PSICQUIC(query = "id:1",
format = "tab25",
database = "BioGrid",
file = "1_interactions_BioGrid_tab25.tsv")
query_PSICQUIC(query = "id:156",
format = "tab25",
database = "BioGrid",
file = "1_interactions_BioGrid_tab25.tsv")
?fwrite
query_PSICQUIC(query = "id:156",
format = "tab25",
database = "BioGrid",
file = "156_interactions_BioGrid_tab25.tsv")
library(queryPSICQUIC)
searchpaths()
grep("queryPSICQUIC",searchpaths(), value = T)
list.dirs("grep("queryPSICQUIC",searchpaths(), value = T)")
list.dirs("grep("queryPSICQUIC",searchpaths(), value = T)")
grep("queryPSICQUIC",searchpaths(), value = T)
list.dirs("grep(queryPSICQUIC",searchpaths(), value = T))
list.dirs(grep(queryPSICQUIC",searchpaths(), value = T))
)
)
""
list.dirs(grep("queryPSICQUIC",searchpaths(), value = T))
list.files(grep("queryPSICQUIC",searchpaths(), value = T))
paste0(list.dirs(grep("queryPSICQUIC",searchpaths(), value = T)),"/data/")
paste0(grep("queryPSICQUIC",searchpaths(), value = T),"/data/")
dir.exists(paste0(grep("queryPSICQUIC",searchpaths(), value = T),"/data/"))
if(!dir.exists(paste0(grep("queryPSICQUIC",searchpaths(), value = T),"/data/"))) dir.create(paste0(grep("queryPSICQUIC",searchpaths(), value = T),"/data/"))
list.files(grep("queryPSICQUIC",searchpaths(), value = T))
list.dirs(grep("queryPSICQUIC",searchpaths(), value = T))
grep("queryPSICQUIC",searchpaths(), value = T)
paste0(pkg_dir,"/data/")
pkg_dir = paste0(grep("queryPSICQUIC",searchpaths(), value = T),,"/data/")
pkg_dir = paste0(grep("queryPSICQUIC",searchpaths(), value = T),"/data/")
Months(Sys.Date())
months(Sys.Date())
year(Sys.Date())
paste0(months(Sys.Date()), year(Sys.Date()))
paste0(pkg_dir, months(Sys.Date()), year(Sys.Date()))
readLines("ftp://ftp.ebi.ac.uk/pub/databases/intact/current")
list.files("ftp://ftp.ebi.ac.uk/pub/databases/intact/current")
readLines("ftp://ftp.ebi.ac.uk/pub/databases/intact/current/")
fread("ftp://ftp.ebi.ac.uk/pub/databases/intact/current/")
list.files("ftp://ftp.ebi.ac.uk/pub/databases/intact/current/")
fread("ftp://ftp.ebi.ac.uk/pub/databases/intact/current/")
file.info("ftp://ftp.ebi.ac.uk/pub/databases/intact/current/all.zip")
file.info("ftp://ftp.ebi.ac.uk/pub/databases/intact/current/")
file.info("ftp://ftp.ebi.ac.uk/pub/databases/intact/current")
fread("ftp://ftp.ebi.ac.uk/pub/databases/intact/current/")
GET("all.zip")
GET("ftp://ftp.ebi.ac.uk/pub/databases/intact/current/")
fread("ftp://ftp.ebi.ac.uk/pub/databases/intact/current/")
grep("all.zip",readLines("ftp://ftp.ebi.ac.uk/pub/databases/intact/current/"), value = T)
sub("^[[:alnum:][:punct:][:blank:]]{43}", "", grep("all.zip",readLines("ftp://ftp.ebi.ac.uk/pub/databases/intact/current/"), value = T))
sub("^[[:alnum:][:punct:][:blank:]]{3}", "", grep("all.zip",readLines("ftp://ftp.ebi.ac.uk/pub/databases/intact/current/"), value = T))
sub("^[[:alnum:][:punct:][:blank:]]{33}", "", grep("all.zip",readLines("ftp://ftp.ebi.ac.uk/pub/databases/intact/current/"), value = T))
fread("ftp://ftp.ebi.ac.uk/pub/databases/intact/current/")
fread("ftp://ftp.ebi.ac.uk/pub/databases/intact/current/")[,.(V6, V7, V8, V9)]
fread("ftp://ftp.ebi.ac.uk/pub/databases/intact/current/")[V9 == "all.zip",.(V6, V7, V8, V9)]
fread("ftp://ftp.ebi.ac.uk/pub/databases/intact/current/")[V9 == "all.zip",.(V6, V7, V8, V9)][,paste0(V6,V7)]
last_release = fread("ftp://ftp.ebi.ac.uk/pub/databases/intact/current/")[V9 == "all.zip",.(V6, V7, V8, V9)][,paste0(V6,V7)]
last_release
last_release = fread("ftp://ftp.ebi.ac.uk/pub/databases/intact/current/")[V9 == "all.zip",.(V6, V7, V8, V9)][,paste0(V6,V7, gsub(":","_", V8))]
last_release
last_release = fread("ftp://ftp.ebi.ac.uk/pub/databases/intact/current/")[V9 == "all.zip",.(V6, V7, V8, V9)][,paste0(V6,V7, "_", gsub(":","_", V8))]
last_release
last_release = fread("ftp://ftp.ebi.ac.uk/pub/databases/intact/current/")[V9 == "all.zip",.(V6, V7, V8, V9)][,paste0(V6,"_",V7, "_", gsub(":","_", V8))]
last_release
paste0(pkg_dir, year(Sys.Date()), last_release)
last_release = fread("ftp://ftp.ebi.ac.uk/pub/databases/intact/current/")[V9 == "all.zip",.(V6, V7, V8, V9)][,paste0(V6,V7, "_", gsub(":","_", V8))]
paste0(pkg_dir, year(Sys.Date()), last_release)
last_release = fread("ftp://ftp.ebi.ac.uk/pub/databases/intact/current/")[V9 == "all.zip",.(V6, V7, V8, V9)][,paste0(V6,V7, ".", gsub(":",".", V8))]
paste0(pkg_dir, year(Sys.Date()), last_release)
last_release = fread("ftp://ftp.ebi.ac.uk/pub/databases/intact/current/")[V9 == "all.zip",.(V6, V7, V8, V9)][,paste0(V6,V7, "_", gsub(":",".", V8))]
paste0(pkg_dir, year(Sys.Date()), last_release)
pkg_dir_last_release = paste0(pkg_dir, year(Sys.Date()), last_release)
pkg_dir_last_release
devtools::load_all()
download_PSICQUIC_Rlib
devtools::load_all()
download_PSICQUIC_Rlib(query = "id:P74565 AND detmethod:\"MI:0018\"",
format = "tab27",
database = "imex")
last_release = fread("ftp://ftp.ebi.ac.uk/pub/databases/intact/current/")[V9 == "all.zip",.(V6, V7, V8, V9)][,paste0(V6,V7, "_", gsub(":",".", V8))]
last_release
devtools::load_all()
download_PSICQUIC_Rlib(query = "id:P74565 AND detmethod:\"MI:0018\"",
format = "tab27",
database = "imex")
docu
library(devtools)
library(roxygen2)
document()
document()
5
download_PSICQUIC_Rlib(query = "id:P74565 AND detmethod:\"MI:0018\"",
format = "tab27",
database = "imex")
document()
devtools::load_all()
download_PSICQUIC_Rlib(query = "id:P74565 AND detmethod:\"MI:0018\"",
format = "tab27",
database = "imex")
document()
devtools::load_all()
queryPSICQUIC(query = "id:P74565 AND detmethod:\"MI:0018\"",
format = "tab27",
database = "imex",
file = filename)
document()
devtools::load_all()
download_PSICQUIC_Rlib(query = "id:P74565 AND detmethod:\"MI:0018\"",
format = "tab27",
database = "imex")
document()
devtools::load_all()
download_PSICQUIC_Rlib(query = "id:P74565 AND detmethod:\"MI:0018\"",
format = "tab27",
database = "imex")
download_PSICQUIC_Rlib(query = "id:P74565 AND detmethod:\"MI:0018\"",
format = "tab27",
database = "imex")
rm(list = ls())
document()
devtools::load_all()
download_PSICQUIC_Rlib(query = "id:P74565 AND detmethod:\"MI:0018\"",
format = "tab27",
database = "imex")
document()
devtools::load_all()
download_PSICQUIC_Rlib(query = "id:P74565 AND detmethod:\"MI:0018\"",
format = "tab27",
database = "imex")
document()
devtools::install("..")
devtools::install("../queryPSICQUIC")
library(queryPSICQUIC)
download_PSICQUIC_Rlib(query = "id:P74565 AND detmethod:\"MI:0018\"",
format = "tab27",
database = "imex")
queryPSICQUIC:::download_PSICQUIC_Rlib(query = "id:P74565 AND detmethod:\"MI:0018\"",
format = "tab27",
database = "imex")
document()
devtools::install("..")
devtools::install("../queryPSICQUIC")
library(PSICQUIC)
queryPSICQUIC:::download_PSICQUIC_Rlib(query = "id:P74565 AND detmethod:\"MI:0018\"",
format = "tab27",
database = "imex")
document()
devtools::install("../queryPSICQUIC")
library(PSICQUIC)
queryPSICQUIC:::download_PSICQUIC_Rlib(query = "id:P74565 AND detmethod:\"MI:0018\"",
format = "tab27",
database = "imex")
queryPSICQUIC:::download_PSICQUIC_Rlib(query = "id:P74565 AND detmethod:\"MI:0018\"",
format = "tab27",
database = "imex")
gsub(":",".", "/Library/Frameworks/R.framework/Versions/3.4/Resources/library/queryPSICQUIC/data/2017Jun7_10.03/query_id:P74565 AND detmethod:\"MI:0018\"tab27imex")
filename = "/Library/Frameworks/R.framework/Versions/3.4/Resources/library/queryPSICQUIC/data/2017Jun7_10.03/query_id:P74565 AND detmethod:\"MI:0018\"tab27imex"
filename = gsub(":",".", filename)
filename
filename = gsub("\"",".", filename)
filename = gsub(":",".", filename)
filename
filename = gsub(" ",".", filename)
filename
filename = "/Library/Frameworks/R.framework/Versions/3.4/Resources/library/queryPSICQUIC/data/2017Jun7_10.03/query_id:P74565 AND detmethod:\"MI:0018\"tab27imex.tsv"
filename = gsub(":",".", filename)
filename = gsub("\"",".", filename)
filename = gsub(" ",".", filename)
if(file.exists(filename)){
message("found local copy of the data from the latest release ... reading into R")
}
filename
?download_PSICQUIC_Rlib
document()
library(devtools)
library(roxygen2)
document()
devtools::install("..")
devtools::install("../queryPSICQUIC")
library(queryPSICQUIC)
queryPSICQUIC:::download_PSICQUIC_Rlib(query = "id:P74565 AND detmethod:\"MI:0018\"",
format = "tab27",
database = "imex")
document()
devtools::install("../queryPSICQUIC")
document()
devtools::install("../queryPSICQUIC")
taxid = "9606"
paste0("taxidA:",taxid," AND ", "taxidB:",taxid)
document()
devtools::install("../queryPSICQUIC")
queryPSICQUICrlib(query = paste0("taxidA:",taxid," AND ", "taxidB:",taxid),
format = "tab25",
database = database)
queryPSICQUIC:::queryPSICQUICrlib(query = paste0("taxidA:",taxid," AND ", "taxidB:",taxid),
format = "tab25",
database = database)
database = "imex"
queryPSICQUIC:::queryPSICQUICrlib(query = paste0("taxidA:",taxid," AND ", "taxidB:",taxid),
format = "tab25",
database = database)
document()
devtools::install("../queryPSICQUIC")
queryPSICQUIC:::queryPSICQUICrlib(query = paste0("taxidA:",taxid," AND ", "taxidB:",taxid),
format = "tab25",
database = database)
queryPSICQUIC:::queryPSICQUICrlib(query = paste0("taxidA:",taxid," AND ", "taxidB:",taxid),
format = "tab25",
database = database)
library(devtools)
library(roxygen2)
document()
devtools::install("../queryPSICQUIC")
devtools::install("../MItoolkit")
library(devtools)
library(roxygen2)
document()
devtools::install("../MItoolkit")
taxid = "9606"
n_inter = 200
degree = NULL
database = "imex"
seed = 1
protein_only = TRUE
full_interactome = queryPSICQUICrlib(query = paste0("taxidA:",taxid," AND ", "taxidB:",taxid),
format = "tab25",
database = database)
library(devtools)
library(roxygen2)
document()
install("../MItools")
library(MItools)
uninstall("MItools")
uninstall("MItoolkit")
uninstall()
install("../MItools")
library(MItools)
?randomInteractome
document()
install("../MItools")
library(MItools)
taxid = "9606"
n_inter = 200
degree = NULL
database = "imex"
seed = 1
protein_only = TRUE
full_interactome = queryPSICQUICrlib(query = paste0("taxidA:",taxid," AND ", "taxidB:",taxid),
format = "tab25",
database = database)
full_interactome = MItools:::queryPSICQUICrlib(query = paste0("taxidA:",taxid," AND ", "taxidB:",taxid),
format = "tab25",
database = database)
document()
install("../MItools")
full_interactome = MItools:::queryPSICQUICrlib(query = paste0("taxidA:",taxid," AND ", "taxidB:",taxid),
format = "tab25",
database = database)
full_interactome = queryPSICQUIC:::queryPSICQUICrlib(query = paste0("taxidA:",taxid," AND ", "taxidB:",taxid),
format = "tab25",
database = database)
document()
install("../MItools")
